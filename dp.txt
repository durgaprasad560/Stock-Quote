Instructions Your task is to implement the function ValidatePIN to assess the validity of an ATM PIN based on specific criteria. The function takes a string atmpin as the input and returns an integer indicating the PIN's validity. A valid ATM PIN must meet the following criteria: It is exactly 4 or 6 characters in length. It contains only digits (0-9). No digit is used more than once. It does not solely consist of a sequence of all ascending or all descending digits, such as '1234' or '4321'. Note that '1235' is valid. The function should return one of the following values in descending order of precedence: ‘0’: valid with 4 characters ‘1’: valid with 6 characters ‘2’: invalid length ‘3’: includes non-digit characters. ‘4’: contains repeated digits. ‘5’: consists of a strict ascending or descending sequence. Example 1 Input: atmpin = '1357' Output: 0 Explanation: The pin is valid, and contains 4 characters. Example 2 Input: atmpin = '1136a' Output: 2 Explanation: The pin has an invalid length, contains a repeated digit, and uses a non-digit character. The invalid length, ‘2’, takes precedence over the other issues, ‘3’ and ‘4’. For this test you’re using Python 3.10.0 Feel free to add comments in your code explaining your solution. # Function to validate the ATM PIN def validate_pin(atmpin): # Write your code here pass # Read the ATM pin that is to be validated atmpin = input() # Call the validation function and display the result as an integer result = validate_pin(atmpin) print(result)
#include <iostream>
#include <cctype>
#include <unordered_set>
#include <cstring>

int ValidatePIN(const char *atmpin) {
    int len = std::strlen(atmpin);
    
    if (len != 4 && len != 6) return 2;  
    
    for (int i = 0; i < len; i++) {
        if (!std::isdigit(atmpin[i])) return 3;  
    }

    std::unordered_set<char> uniqueChars(atmpin, atmpin + len);
    if (uniqueChars.size() != len) return 4;  

    bool ascending = true, descending = true;
    for (int i = 1; i < len; i++) {
        if (atmpin[i] != atmpin[i - 1] + 1) ascending = false;
        if (atmpin[i] != atmpin[i - 1] - 1) descending = false;
    }

    if (ascending || descending) return 5;  

    return (len == 4) ? 0 : 1;
}

int main() {
    char atmpin[7];
    std::cin >> atmpin;

    int result = ValidatePIN(atmpin);
    std::cout << result << std::endl;

    return 0;
}
